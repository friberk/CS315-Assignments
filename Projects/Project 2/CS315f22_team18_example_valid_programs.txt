<?gs++

/$ Example Program 1 $/

void func_1() begin
    int $first_var1, $second_var2 = 15;
    for (; $first_var1 <= 20; $first_var1 = $first_var1 + 1) begin
        if (true) begin
            $second_var2 = temperature;
        end;
    end;

    float a = 5 - +2.4 + 2 - (3 / (16 + .7));

    string target_url = "http://10.50.2.67";
    bool success = connect_to_url(target_url, 1);

    if (success == check_connection(1)) begin
        send_int_to_conn(4 + 2.8, 1); /$ Send an integer to connection with ID 1 $/
    end
    elseif ($second_var2 > 30) begin
        output("IT IS TOO HOT, EXITING...");
        return;
    end
    else begin
        long epoch_timestamp = timestamp;
    end;
end;

?>

<?gs++

/$ Example Program 2 $/

int func_2(string url) begin
    if (url == "") begin
        return 1; /$ early return $/
    end;

    do begin
        string s1 = "humidity program";
        if (check_connection(3 * 5 + -2) != true) begin
            conn_id = 3 * 5 + (-2);
            connect_to_url(url, (conn_id));
            send_int_to_conn(air_pressure, conn_id);
        end
        else begin
            continue;
        end;
    end while (humidity <= 5000);

    enable_switch(5);
    disable_switch(0);

    return light_level;
end;

?>

<?gs++

/$ Example Program 3 $/

bool func_3(float val, int a, char b) begin
    string cat, dog, bird;
    char d1;

    b = d1 = 'z';
    cat = cat + b;
    dog = "karabas";
    bird = "parrot";

    bool in_danger = true;

    while (true) begin
        if (sound_level > -1000 && val < +.7 || true) begin
            break;
        end;
        in_danger = false;
    end;

    return in_danger && true;
end;

?>

<?gs++

/$ Example Program 4 $/

float func_4(long l, bool test) begin
    if (test == enable_switch(7)) begin
        l = timestamp;
    end;

    int multiplier = air_quality * light_level;

    return (l / multiplier);
end;

?>

<?gs++

/$ Example Program 5 $/

string func_5(char a1, string target_url) begin
    int c1, c2;
    int c3 = c1, c2 = 23;

    if (connect_to_url(target_url, 2) == check_connection(2)) begin
        send_int_to_conn(c2 + c1 * (c3 / c1 + 2 * 3.5) / -7, +2);
        return "SEND SUCCESS";
    end;

    for (int i = 0; i < temperature; i = i + 1) begin
        if (a1 == 't') begin
            return " 1\&%/~   ";
        end
        else begin
            return "*?!*2ds.,";
        end;
    end;
end;

?>

<?gs++

/$ Example Program 6 $/

void func_6(int digit, string err_msg) begin
    string user_msg = input(); /$ take an input string from the user $/
    string target_url = "http://192.168.0.4";

    bool conn_success = connect_to_url(target_url, -123);

    /$ checking the connection $/ if (conn_success == check_connection(-123)) begin
        output("CONNECTION SUCCESSFUL\n");
        outputf("CONNECTED TO THE URL: %s\n", target_url);
        outputf("IoT TEMP IS = %d SL IS = %d", temperature, sound_level);
    end
    else begin
        output("CONNECTION FAILED\n");
        outputf("ERROR MSG: %s", err_msg);
    end;
end;

?>
